services:
  postgres:
    image: postgres:15
    container_name: patient_health_db
    environment:
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-healthpass123}
      POSTGRES_DB: ${DB_NAME:-patient_health_analytics}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - health_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-patient_health_analytics}"]
      interval: 10s
      timeout: 5s
      retries: 5

  flask-api:
    build: .
    container_name: health_analytics_api
    ports:
      - "5001:5000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_USER: ${DB_USER:-admin}
      DB_PASSWORD: ${DB_PASSWORD:-healthpass123}
      DB_NAME: ${DB_NAME:-patient_health_analytics}
      EPIC_CLIENT_ID: ${EPIC_CLIENT_ID:-19bd6cc8-185d-4b2a-9471-240ce676f733}
      EPIC_FHIR_URL: ${EPIC_FHIR_URL:-https://fhirauth.patientdev.repldev.rep/api/FHIR/R4}
      EPIC_AUTH_URL: ${EPIC_AUTH_URL:-https://patientdev.repldev.rep/oauth2/authorize}
      EPIC_TOKEN_URL: ${EPIC_TOKEN_URL:-https://fhirauth.patientdev.rep/oauth2/token}
      REDIRECT_URI: ${REDIRECT_URI:-http://localhost:5000/callback}
    networks:
      - health_network

volumes:
  postgres_data:

networks:
  health_network: